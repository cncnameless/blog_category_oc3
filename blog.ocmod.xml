<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>Blog Extension for OpenCart 3</name>
    <version>1.0</version>
    <author>Grok</author>
    <code>blog_extension</code>
    
    <!-- Модификация админ контроллера information -->
    <file path="admin/controller/catalog/information.php">
        <operation>
            <search><![CDATA[$data['tab_links'] = $this->language->get('tab_links');]]></search>
            <add position="after"><![CDATA[
            $data['tab_categories'] = $this->language->get('tab_categories');
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[$this->load->model('catalog/manufacturer');]]></search>
            <add position="after"><![CDATA[
            $this->load->model('catalog/blog_category');
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[if (isset($this->request->post['information_store'])) {]]></search>
            <add position="before"><![CDATA[
            if (isset($this->request->post['blog_category'])) {
                $data['information_blog_category'] = $this->request->post['blog_category'];
            } elseif (isset($this->request->get['information_id'])) {
                $data['information_blog_category'] = $this->model_catalog_information->getInformationBlogCategories($this->request->get['information_id']);
            } else {
                $data['information_blog_category'] = array();
            }

            $data['blog_categories'] = $this->model_catalog_blog_category->getBlogCategories(0);
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[$data['information_description'] = $this->model_catalog_information->getInformationDescriptions($information_id);]]></search>
            <add position="after"><![CDATA[
            $data['image'] = $information_info['image'];
            $data['thumb'] = $this->model_tool_image->resize($information_info['image'], 100, 100);
            $data['placeholder'] = $this->model_tool_image->resize('no_image.png', 100, 100);
            $data['views'] = $information_info['views'];
            $data['date_added'] = $information_info['date_added'];
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[public function add() {]]></search>
            <add position="after"><![CDATA[
            if (isset($this->request->post['blog_category'])) {
                foreach ($this->request->post['blog_category'] as $blog_category_id) {
                    $this->model_catalog_information->addInformationBlogCategory($information_id, $blog_category_id);
                }
            }
            if (isset($this->request->post['image'])) {
                $data['image'] = $this->request->post['image'];
            } else {
                $data['image'] = '';
            }
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[public function edit() {]]></search>
            <add position="after"><![CDATA[
            $this->model_catalog_information->deleteInformationBlogCategory($information_id);
            if (isset($this->request->post['blog_category'])) {
                foreach ($this->request->post['blog_category'] as $blog_category_id) {
                    $this->model_catalog_information->addInformationBlogCategory($information_id, $blog_category_id);
                }
            }
            if (isset($this->request->post['image'])) {
                $data['image'] = $this->request->post['image'];
            } else {
                $data['image'] = '';
            }
            ]]></add>
        </operation>
    </file>
    
    <!-- Модификация админ вью information_form.twig -->
    <file path="admin/view/template/catalog/information_form.twig">
        <operation>
            <search><![CDATA[<li><a href="#tab-links" data-toggle="tab">{{ tab_links }}</a></li>]]></search>
            <add position="after"><![CDATA[
            <li><a href="#tab-categories" data-toggle="tab">{{ tab_categories }}</a></li>
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[<div class="tab-pane" id="tab-general">]]></search>
            <add position="after"><![CDATA[
            <div class="form-group">
                <label class="control-label" for="input-image">{{ entry_image }}</label>
                <div class="input-group">
                    <span class="input-group-btn">
                        <a id="thumb-image" data-toggle="image" class="img-thumbnail"><img src="{{ thumb }}" alt="" title="" data-placeholder="{{ placeholder }}" /></a>
                        <input type="hidden" name="image" value="{{ image }}" id="input-image" />
                    </span>
                </div>
            </div>
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[</div> <!-- end tab-content -->]]></search>
            <add position="before"><![CDATA[
            <div class="tab-pane" id="tab-categories">
                <div class="form-group">
                    <label class="control-label" for="input-blog-category">{{ entry_category }}</label>
                    <input type="text" name="blog_category" value="" placeholder="{{ entry_autocomplete }}" id="input-blog-category" class="form-control" />
                    <div id="information-blog-category" class="well well-sm" style="height: 150px; overflow: auto;">
                        {% for blog_category in information_blog_category %}
                        <div id="information-blog-category{{ blog_category.blog_category_id }}"><i class="fa fa-minus-circle"></i> {{ blog_category.name }}
                            <input type="hidden" name="blog_category[]" value="{{ blog_category.blog_category_id }}" />
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
            ]]></add>
        </operation>
    </file>
    
    <!-- Модификация модели information для категорий и новых полей -->
    <file path="admin/model/catalog/information.php">
        <operation>
            <search><![CDATA[public function getInformation($information_id) {]]></search>
            <add position="replace"><![CDATA[
            public function getInformation($information_id) {
                $query = $this->db->query("SELECT DISTINCT *, (SELECT GROUP_CONCAT(cd1.name ORDER BY level SEPARATOR '&nbsp;&nbsp;&gt;&nbsp;&nbsp;') FROM " . DB_PREFIX . "blog_category_path cp LEFT JOIN " . DB_PREFIX . "blog_category_description cd1 ON (cp.path_id = cd1.blog_category_id AND cp.blog_category_id != cp.path_id) WHERE cp.blog_category_id = i.blog_category_id AND cd1.language_id = '" . (int)$this->config->get('config_language_id') . "' GROUP BY cp.blog_category_id) AS path FROM " . DB_PREFIX . "information i LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) WHERE i.information_id = '" . (int)$information_id . "' AND id.language_id = '" . (int)$this->config->get('config_language_id') . "'");

                return $query->row;
            }
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[public function addInformation($data) {]]></search>
            <add position="after"><![CDATA[
            $this->db->query("INSERT INTO " . DB_PREFIX . "information SET sort_order = '" . (int)$data['sort_order'] . "', bottom = '" . (isset($data['bottom']) ? 1 : 0) . "', status = '" . (int)$data['status'] . "', image = '" . $this->db->escape($data['image']) . "', date_added = NOW()");
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[public function editInformation($information_id, $data) {]]></search>
            <add position="after"><![CDATA[
            $this->db->query("UPDATE " . DB_PREFIX . "information SET sort_order = '" . (int)$data['sort_order'] . "', bottom = '" . (isset($data['bottom']) ? 1 : 0) . "', status = '" . (int)$data['status'] . "', image = '" . $this->db->escape($data['image']) . "' WHERE information_id = '" . (int)$information_id . "'");
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[} // end class]]></search>
            <add position="before"><![CDATA[
            public function getInformationBlogCategories($information_id) {
                $information_blog_category_data = array();
                $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "blog_to_category WHERE information_id = '" . (int)$information_id . "'");
                foreach ($query->rows as $result) {
                    $information_blog_category_data[] = $result['blog_category_id'];
                }
                return $information_blog_category_data;
            }

            public function addInformationBlogCategory($information_id, $blog_category_id) {
                $this->db->query("INSERT INTO " . DB_PREFIX . "blog_to_category SET information_id = '" . (int)$information_id . "', blog_category_id = '" . (int)$blog_category_id . "'");
            }

            public function deleteInformationBlogCategory($information_id) {
                $this->db->query("DELETE FROM " . DB_PREFIX . "blog_to_category WHERE information_id = '" . (int)$information_id . "'");
            }
            ]]></add>
        </operation>
    </file>
    
    <!-- Модификация фронтенд контроллера information для views -->
    <file path="catalog/controller/information/information.php">
        <operation>
            <search><![CDATA[if ($information_info) {]]></search>
            <add position="after"><![CDATA[
            $this->db->query("UPDATE " . DB_PREFIX . "information SET views = (views + 1) WHERE information_id = '" . (int)$this->request->get['information_id'] . "'");
            ]]></add>
        </operation>
        <operation>
            <search><![CDATA[$data['description'] = html_entity_decode($information_info['description'], ENT_QUOTES, 'UTF-8');]]></search>
            <add position="after"><![CDATA[
            $data['views'] = $information_info['views'];
            $data['date_added'] = date($this->language->get('date_format_short'), strtotime($information_info['date_added']));
            $word_count = str_word_count(strip_tags($data['description']));
            $data['reading_time'] = ceil($word_count / 200); // Минуты на чтение
            if ($information_info['image']) {
                $data['thumb'] = $this->model_tool_image->resize($information_info['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_popup_height'));
            } else {
                $data['thumb'] = '';
            }
            ]]></add>
        </operation>
    </file>
    
    <!-- Модификация фронтенд вью information.twig -->
    <file path="catalog/view/theme/*/template/information/information.twig">
        <operation>
            <search><![CDATA[<h1>{{ heading_title }}</h1>]]></search>
            <add position="after"><![CDATA[
            <p class="blog-meta">Дата: {{ date_added }} | Просмотры: {{ views }} | Время чтения: {{ reading_time }} мин</p>
            {% if thumb %}
            <img src="{{ thumb }}" alt="{{ heading_title }}" class="img-responsive" />
            {% endif %}
            ]]></add>
        </operation>
    </file>
    
    <!-- Добавление JS для автокомплита категорий в админке -->
    <file path="admin/view/javascript/common.js">
        <operation>
            <search><![CDATA[// Manufacturer]]></search>
            <add position="after"><![CDATA[
            // Blog Categories
            $('input[name=\'blog_category\']').autocomplete({
                'source': function(request, response) {
                    $.ajax({
                        url: 'index.php?route=catalog/blog_category/autocomplete&user_token=' + user_token + '&filter_name=' +  encodeURIComponent(request),
                        dataType: 'json',
                        success: function(json) {
                            response($.map(json, function(item) {
                                return {
                                    label: item['name'],
                                    value: item['blog_category_id']
                                }
                            }));
                        }
                    });
                },
                'select': function(item) {
                    $('input[name=\'blog_category\']').val('');

                    $('#information-blog-category' + item['value']).remove();

                    $('#information-blog-category').append('<div id="information-blog-category' + item['value'] + '"><i class="fa fa-minus-circle"></i> ' + item['label'] + '<input type="hidden" name="blog_category[]" value="' + item['value'] + '" /></div>');
                }
            });

            $('#information-blog-category').delegate('.fa-minus-circle', 'click', function() {
                $(this).parent().remove();
            });
            ]]></add>
        </operation>
    </file>
    
</modification>